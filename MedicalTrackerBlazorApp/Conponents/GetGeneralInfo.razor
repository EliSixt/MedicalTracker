
<h3>GetGeneralInfo</h3>

<div style="margin: 5px">
    <GetName @bind-NamesValue="GeneralInfo.Name" />
</div>
<div style="margin: 5px">
    Date of Birth:
    <input type="date" @bind="GeneralInfo.DateOfBirth" /> @*Birthday*@
</div>
<div style="margin: 5px">
    Weight:
    <input type="number" @bind="GeneralInfo.Weight" placeholder="Weight" /> @*Weight*@
</div>
<div style="margin: 5px">
    Height:
    <input type="number" @bind="GeneralInfo.Height" placeholder="Height" /> @*Height*@
</div>
<div style="margin: 5px">
    <input type="text" @bind="GeneralInfo.Languages" placeholder="Languages" />@*languages*@
</div>
<div style="margin: 5px">
    <input type="text" @bind="GeneralInfo.Ethnicity" placeholder="Ethnicity" />@*Ethnicity*@
</div>
<div style="margin: 5px">
    <input type="text" @bind="GeneralInfo.Race" placeholder="Race" />@*race*@
</div>
<div style="margin: 5px">
    <input type="text" @bind="GeneralInfo.Gender" placeholder="Gender" />@*gender*@
</div>
<div style="margin: 5px">
    <input type="text" @bind="GeneralInfo.SexAtBirth" placeholder="Sex at Birth" />@*SexAtBirth*@
</div>

<button @onclick="() => Data.SaveGeneralInfo(GeneralInfo)">Submit General Info</button>


    General Info: @GeneralInfo.


@code {
    [Parameter]
    public GeneralInfo GeneralInfo { get; set; } = new();

    [Parameter]
    public EventCallback<GeneralInfo> GeneralInfoChanged { get; set; }


    ///// <summary>
    ///// Prevents duplicate patients from being added into the Patients list
    ///// by comparing GeneralInfo to all of the existing (List)Patients.GeneralInfo in the DataService.
    ///// If it passes it gets allowed to be saved.
    ///// </summary>
    //public void SaveGeneralInfo()
    //{
    //    GeneralInfo copyGeneralInfo = new(GeneralInfo);

    //    Patient copyPatient = new(Data.GetCurrentPatient());

    //    if (!Data.HasDuplicate((Data.Patients.Select(x => x.GeneralInfo).ToList()), copyGeneralInfo))
    //    {
    //        Data.CurrentPatient.GeneralInfo = copyGeneralInfo;
    //        GeneralInfo = new();
    //    }
    //    bool success;
    //    //success = Data.CheckReviewNewDataAndUpdateCurrentPatient(Data.Patients.Select(x => x.GeneralInfo).ToList(), copyGeneralInfo, copyPatient, Data.IsGeneralInfoFilled(copyPatient));
    //    //success = Data.CheckReviewNewDataAndUpdateCurrentPatient(Data.Patients.Select(x => x.GeneralInfo).ToList(), copyGeneralInfo, copyPatient, copyGeneralInfo, Data.IsGeneralInfoFilled(copyGeneralInfo));
    //}
}
