<h3>AutoComplete</h3>

@*<form>

    <input type="text" autocomplete="on" placeholder="Search" list="newWordlist" @bind="newWord" />
    <datalist>
        @if (newWordList != null)
        {
            @foreach (var item in newWordList)
            {
                <option value="@item"></option>
            }
        }
    </datalist>
    <button>Submit</button>
</form>*@

<input type="text" @oninput="(e => OnInput(e))"  />

    @foreach (var item in autoCompleteSuggestions)//displays a list, keeps adding to that list without earsing the old list. Bind the item/button to something.
    {
        <li>
            @item
        </li>
    }




@code {
    //private string _userInput ="";

    //public string UserInput
    //{
    //    get
    //    {
    //        return _userInput;
    //    }
    //    set
    //    {
    //        _userInput = value;
    //    }
    //}


    List<string> clonedWordList = new();
    List<string> autoCompleteSuggestions = new();


    
    public void cloneList()
    {
        foreach (var item in Data.wordList)
        {
            clonedWordList.Add(item);
        }
    }

    
    private void OnInput(ChangeEventArgs args)
    {
        var inputText = args.Value as string;
        filteredListGenerator(Data.wordList, inputText);
    }

    

    public void filteredListGenerator(List<string> wordList, string input)
    {
        autoCompleteSuggestions.Clear();
        cloneList(); //find this method a better spot to run once
        List<string> list = new();
        list = wordList.Where(x => x.ToLower().StartsWith(input.ToLower())).Take(8).ToList(); //work on this its sorta not filtering the way it's anticipated
        if (list.Count > 0)
        {
            //TODO foreach instead 
            for (var i = 0; i < 8; i++)
            {
                autoCompleteSuggestions.Add(list[i]);
            }
        }
    }
}
