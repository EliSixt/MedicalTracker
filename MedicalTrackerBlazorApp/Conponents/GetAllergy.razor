<h3>GetAllergy</h3>
<div style="margin: 5px">
    Name of the Allergy
    <br />
    <input type="text" @bind="Allergy.AlgyName" placeholder="Allergy Name" />@*AlgyName*@
</div>
<div style="margin: 5px">
    Description of Allergy Reactions
    <br />
    <input type="text" @bind="Allergy.BriefDescriptionOfReactions" placeholder="List all of the Allergy Reactions" />@*BriefDescriptionOfReactions*@
</div>
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.IslifeThreatening" /> Life Threatening @*IsLifeThreatening*@
</div>
@if (Allergy.IslifeThreatening)
{
    <div style="margin: 5px">
        <input type="text" @bind="Allergy.SymptomsLeadingToLifeThreatening" placeholder="Symptoms Leading to Life-Threatening" />@*SymptomsLeadingToLifeThreatening*@
    </div>
}
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.IngestionOnly" />@*Ingestion only?*@
    Ingestion Only
</div>
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.ConfirmedTestedAlgyType"> Allergy Tested @*ConfirmedTestedAlgyType*@
</div>
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.EpiPenRequired" /> EpiPen Required @*EpiPenRequired*@
</div>
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.CPRRequired" /> CPR Required @*CPRRequired*@
</div>
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.Call911" /> Call 911 @*Call911*@
</div>


@*IF medicine is required pop-up GetMedicine with the List in case of multiple medicines*@
<div style="margin: 5px">
    <input type="checkbox" @bind="Allergy.TreatmentRequired" /> Medicine Required  @*TreatmentRequired*@
</div>
@if (Allergy.TreatmentRequired)
{
    <GetMedicine @bind-Medicine="AlgyMed" />
    <br />
    <button @onclick="AddMeds">Add</button>
    @foreach (Medicine item in AlgyMedicines)
    {
        <div>@item</div>
    }
}

@code {
    [Parameter]
    public Allergy Allergy { get; set; } = new();
    [Parameter]
    public EventCallback<Allergy> AllergyChanged { get; set; }

    public Medicine AlgyMed = new();

    private List<Medicine> _algyMeds = new();

    public List<Medicine> AlgyMedicines
    {
        get => _algyMeds;
        set => _algyMeds = value;
    }

    public void AddMeds()
    {
        Medicine copyMed = new(AlgyMed);

        bool duplicate = false;

        foreach (Medicine item in AlgyMedicines)
        {
            duplicate = string.Equals(copyMed.BrandName, item.BrandName, StringComparison.OrdinalIgnoreCase);
            if (duplicate)
            {
                break;
            }
            duplicate = string.Equals(copyMed.GenericName, item.GenericName, StringComparison.OrdinalIgnoreCase);
            if (duplicate)
            {
                break;
            }
        }

        if (!duplicate)
        {
            AlgyMedicines.Add(copyMed);
        }
    }
}
